{
  "terminal.integrated.fontFamily": "monospace",
  "vim.leader": "<Space>",
  "editor.rulers": [
    120
  ],
  "workbench.editor.enablePreview": false,
  "debug.allowBreakpointsEverywhere": true,
  "editor.suggestSelection": "first",
  "terminal.integrated.defaultProfile.osx": "zsh",
  "terminal.integrated.profiles.osx": {
    "bash": {
      "path": "bash",
      "args": [
        "-l"
      ],
      "icon": "terminal-bash"
    },
    "zsh": {
      "path": "zsh",
      "args": [
        "-l"
      ]
    },
    "fish": {
      "path": "fish",
      "args": [
        "-l"
      ]
    },
    "tmux": {
      "path": "tmux",
      "icon": "terminal-tmux"
    },
    "pwsh": {
      "path": "pwsh",
      "icon": "terminal-powershell"
    }
  },
  "bashIde.explainshellEndpoint": "http://localhost:5000",
  "vimFindHighlight.charPrimaryColor": "green",
  "vimFindHighlight.charSecondaryColor": "red",
  "vimFindHighlight.charFontWeight": "800",
  "python.formatting.blackPath": "black",
  "terminal.integrated.allowChords": false,
  "terminal.integrated.drawBoldTextInBrightColors": false,
  "python.defaultInterpreterPath": "/usr/local/bin/python3",
  "jest.autoRun": "off",
  "workbench.iconTheme": "material-icon-theme",
  "typescript.preferences.importModuleSpecifier": "relative",
  "files.exclude": {
    "**/.classpath": true,
    "**/.factorypath": true,
    "**/.project": true,
    "**/.settings": true,
    "**/*.class": true
  },
  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "before": [
        "p"
      ],
      "after": [
        "p",
        "g",
        "v",
        "y"
      ]
    },
    {
      "before": [
        "$"
      ],
      "after": [
        "g",
        "_"
      ]
    },
    {
      "before": [
        "T"
      ],
      "commands": [
        "add-arround.insertTemplate"
      ]
    },
    {
      "before": [
        "<C-d>"
      ],
      "commands": [
        "editor.action.addSelectionToNextFindMatch"
      ]
    }
  ],
  "vim.insertModeKeyBindings": [
    {
      "before": [
        "j",
        "j"
      ],
      "after": [
        "<Esc>"
      ]
    }
  ],
  "vim.normalModeKeyBindings": [
    {
      "before": [
        "m",
        "t"
      ],
      "commands": [
        {
          "command": "editor.emmet.action.matchTag"
        }
      ]
    },
    {
      "before": [
        "<C-a>"
      ],
      "after": [
        "g",
        "g",
        "V",
        "G"
      ]
    },
    {
      "before": [
        "S"
      ],
      "after": [
        ":",
        "s",
        "/"
      ]
    },
    {
      "before": [
        "<C-b>",
        "c"
      ],
      "commands": [
        "bookmarks.clearFromAllFiles"
      ]
    },
    {
      "before": [
        "<C-b>",
        "n"
      ],
      "commands": [
        "bookmarks.jumpToNext"
      ]
    },
    {
      "before": [
        "<C-b>",
        "n"
      ],
      "commands": [
        "bookmarks.jumpToNext"
      ]
    },
    {
      "before": [
        "<C-b>",
        "t"
      ],
      "commands": [
        "bookmarks.toggle"
      ]
    },
    {
      "before": [
        "<C-b>",
        "m"
      ],
      "commands": [
        "bookmarks.toggleLabeled"
      ]
    },
    {
      "before": [
        "<C-b>",
        "l"
      ],
      "commands": [
        "bookmarks.listFromAllFiles"
      ]
    },
    {
      "before": [
        "<C-n>"
      ],
      "commands": [
        ":nohl"
      ]
    },
    {
      "before": [
        "f",
        "d"
      ],
      "after": [
        "g",
        "d"
      ]
    },
    {
      "before": [
        "Y"
      ],
      "after": [
        "y",
        "$"
      ]
    },
    {
      "before": [
        "$"
      ],
      "after": [
        "g",
        "_"
      ]
    },
    {
      "before": [
        "T"
      ],
      "commands": [
        "add-arround.insertTemplate"
      ]
    }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": [
        "<Esc>"
      ],
      "commands": [
        ":nohl"
      ]
    },
    {
      "before": [
        "="
      ],
      "after": [
        ""
      ],
      "commands": [
        {
          "command": "editor.action.reindentlines",
          "args": []
        }
      ]
    },
    // Undo & Redo
    {
      "before": [
        "u"
      ],
      "commands": [
        "undo"
      ]
    },
    {
      "before": [
        "c-r"
      ],
      "commands": [
        "redo"
      ]
    }
  ],
  "vim.easymotion": true,
  "vim.incsearch": true,
  "vim.useSystemClipboard": true,
  "vim.useCtrlKeys": true,
  "vim.hlsearch": true,
  "search.exclude": {
    "**/node_modules": true,
    "**/bower_components": true,
    "**/*.code-search": true,
    "**/bot": true
  },
  "vim.handleKeys": {
    "<D-c>": false,
    "<C-f>": false,
    "<C-w>": false,
    "<C-k>": false,
    "<C-e>": false
  },
  "explorer.confirmDelete": false,
  "eslint.validate": [
    "vue",
    "html",
    "javascript",
    "typescript"
  ],
  "eslint.nodePath": "/usr/bin/node",
  "editor.lineNumbers": "relative",
  "editor.bracketPairColorization.enabled": false,
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[go]": {
    "editor.defaultFormatter": "golang.go"
  },
  "editor.formatOnSave": true,
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "material-icon-theme.showWelcomeMessage": false,
  "git.ignoreMissingGitWarning": true,
  // The number of spaces a tab is equal to. This setting is overridden
  // based on the file contents when `editor.detectIndentation` is true.
  "editor.tabSize": 4,
  "editor.detectIndentation": true,
  // Insert spaces when pressing Tab. This setting is overriden
  // based on the file contents when `editor.detectIndentation` is true.
  "editor.insertSpaces": false,
  // When opening a file, `editor.tabSize` and `editor.insertSpaces`
  // will be detected based on the file contents. Set to false to keep
  // the values you've explicitly set, above.
  "python.languageServer": "Pylance",
  "python.formatting.provider": "black",
  "typescript.updateImportsOnFileMove.enabled": "always",
  "files.associations": {
    "*.html": "html"
  },
  "diffEditor.ignoreTrimWhitespace": false,
  "workbench.editorAssociations": {
    "*.ipynb": "jupyter-notebook"
  },
  "todo-tree.general.tags": [
    "BUG",
    "HACK",
    "FIXME",
    "TODO",
    "XXX",
    "[ ]",
    "[x]"
  ],
  "todo-tree.regex.regex": "(//|#|<!--|;|/\\*|^|^\\s*(-|\\d+.))\\s*($TAGS)",
  "[shellscript]": {
    "editor.defaultFormatter": "shakram02.bash-beautify"
  },
  "[dockerfile]": {
    "editor.defaultFormatter": "ms-azuretools.vscode-docker"
  },
  "javascript.updateImportsOnFileMove.enabled": "always",
  "editor.cursorStyle": "line",
  "editor.wordSeparators": "/\\()\"':,.;<>~!@#$%^&*|+=[]{}`?-",
  "editor.wordWrap": "off",
  "vsicons.dontShowNewVersionMessage": true,
  "notebook.cellToolbarLocation": {
    "default": "right",
    "jupyter-notebook": "left"
  },
  "terminal.integrated.defaultProfile.linux": "zsh",
  "cSpell.enabled": true,
  "[java]": {
    "editor.defaultFormatter": "redhat.java"
  },
  "cSpell.enableFiletypes": [
    "kotlin"
  ],
  "npm.keybindingsChangedWarningShown": true,
  "cSpell.userWords": [
    "Knockable",
    "overfitting",
    "proxied"
  ],
  "sync.removeExtensions": false,
  "sync.autoDownload": true,
  "sync.gist": "67c823a94d8dece62a5456137bc524bf",
  "jupyter.widgetScriptSources": [
    "jsdelivr.com",
    "unpkg.com"
  ],
  "liveshare.notebooks.allowGuestExecuteCells": true,
  "xstate.nestTypegenFiles": false,
  "explorer.fileNesting.patterns": {
    "*.ts": "${capture}.js",
    "*.js": "${capture}.js.map, ${capture}.min.js, ${capture}.d.ts",
    "*.jsx": "${capture}.js",
    "*.tsx": "${capture}.ts",
    "tsconfig.json": "tsconfig.*.json",
    "package.json": "package-lock.json, yarn.lock, pnpm-lock.yaml"
  },
  "aws.telemetry": false,
  "workbench.colorTheme": "Visual Studio Light",
  "go.toolsManagement.autoUpdate": true,
  "auto-close-tag.activationOnLanguage": [
    "HTML (Eex)"
  ],
  "jupyter.askForKernelRestart": false,
  "redhat.telemetry.enabled": false,
  "yaml.customTags": [
    "!And",
    "!And sequence",
    "!If",
    "!If sequence",
    "!Not",
    "!Not sequence",
    "!Equals",
    "!Equals sequence",
    "!Or",
    "!Or sequence",
    "!FindInMap",
    "!FindInMap sequence",
    "!Base64",
    "!Join",
    "!Join sequence",
    "!Cidr",
    "!Ref",
    "!Sub",
    "!Sub sequence",
    "!GetAtt",
    "!GetAZs",
    "!ImportValue",
    "!ImportValue sequence",
    "!Select",
    "!Select sequence",
    "!Split",
    "!Split sequence"
  ],
  "highlight.regexes": {
    "((?:<!-- *)?(?:#|// @|//|./\\*+|<!--|--|\\* @|{!|{{!--|{{!) *TODO(?:\\s*\\([^)]+\\))?:?)((?!\\w)(?: *-->| *\\*/| *!}| *--}}| *}}|(?= *(?:[^:]//|/\\*+|<!--|@|--|{!|{{!--|{{!))|(?: +[^\\n@]*?)(?= *(?:[^:]//|/\\*+|<!--|@|--(?!>)|{!|{{!--|{{!))|(?: +[^@\\n]+)?))": {
      "filterFileRegex": ".*(?<!CHANGELOG.md)$",
      "decorations": [
        {
          "overviewRulerColor": "#ffcc00",
          "backgroundColor": "#ffcc00",
          "color": "#1f1f1f",
          "fontWeight": "bold"
        },
        {
          "backgroundColor": "#ffcc00",
          "color": "#1f1f1f"
        }
      ]
    },
    "((?:<!-- *)?(?:#|// @|//|./\\*+|<!--|--|\\* @|{!|{{!--|{{!) *(?:FIXME|FIX|BUG|UGLY|DEBUG|HACK)(?:\\s*\\([^)]+\\))?:?)((?!\\w)(?: *-->| *\\*/| *!}| *--}}| *}}|(?= *(?:[^:]//|/\\*+|<!--|@|--|{!|{{!--|{{!))|(?: +[^\\n@]*?)(?= *(?:[^:]//|/\\*+|<!--|@|--(?!>)|{!|{{!--|{{!))|(?: +[^@\\n]+)?))": {
      "filterFileRegex": ".*(?<!CHANGELOG.md)$",
      "decorations": [
        {
          "overviewRulerColor": "#cc0000",
          "backgroundColor": "#cc0000",
          "color": "#1f1f1f",
          "fontWeight": "bold"
        },
        {
          "backgroundColor": "#cc0000",
          "color": "#1f1f1f"
        }
      ]
    },
    "((?:<!-- *)?(?:#|// @|//|./\\*+|<!--|--|\\* @|{!|{{!--|{{!) *(?:REVIEW|OPTIMIZE|TSC)(?:\\s*\\([^)]+\\))?:?)((?!\\w)(?: *-->| *\\*/| *!}| *--}}| *}}|(?= *(?:[^:]//|/\\*+|<!--|@|--|{!|{{!--|{{!))|(?: +[^\\n@]*?)(?= *(?:[^:]//|/\\*+|<!--|@|--(?!>)|{!|{{!--|{{!))|(?: +[^@\\n]+)?))": {
      "filterFileRegex": ".*(?<!CHANGELOG.md)$",
      "decorations": [
        {
          "overviewRulerColor": "#00ccff",
          "backgroundColor": "#00ccff",
          "color": "#1f1f1f",
          "fontWeight": "bold"
        },
        {
          "backgroundColor": "#00ccff",
          "color": "#1f1f1f"
        }
      ]
    },
    "((?:<!-- *)?(?:#|// @|//|./\\*+|<!--|--|\\* @|{!|{{!--|{{!) *(?:IDEA)(?:\\s*\\([^)]+\\))?:?)((?!\\w)(?: *-->| *\\*/| *!}| *--}}| *}}|(?= *(?:[^:]//|/\\*+|<!--|@|--|{!|{{!--|{{!))|(?: +[^\\n@]*?)(?= *(?:[^:]//|/\\*+|<!--|@|--(?!>)|{!|{{!--|{{!))|(?: +[^@\\n]+)?))": {
      "filterFileRegex": ".*(?<!CHANGELOG.md)$",
      "decorations": [
        {
          "overviewRulerColor": "#cc00cc",
          "backgroundColor": "#cc00cc",
          "color": "#1f1f1f",
          "fontWeight": "bold"
        },
        {
          "backgroundColor": "#cc00cc",
          "color": "#1f1f1f"
        }
      ]
    }
  },
  "terminal.integrated.enableMultiLinePasteWarning": false
}
